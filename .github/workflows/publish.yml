name: build-publish

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: "Skip npm publish (build only)"
        required: false
        type: boolean
        default: false
  push:
    tags:
      - "v*"
      - "*.*.*"
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Verify tag matches package.json version (if running on a tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag: $TAG"
          echo "package.json version: $PKG_VERSION"
          if [ "$TAG" != "$PKG_VERSION" ]; then
            echo "‚ùå Tag ($TAG) does not match package.json version ($PKG_VERSION)."
            exit 1
          fi

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        run: npm run build

      - name: Pack tarball
        run: npm pack

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-tarball
          path: "*.tgz"

      - name: Publish to npm
        if: ${{ !inputs.dryRun }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # --access public is idempotent; it's required the first publish, harmless later
          npm publish --access public
